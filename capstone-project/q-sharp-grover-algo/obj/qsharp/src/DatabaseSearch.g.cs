//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Intrinsic.Interfaces;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ApplyDatabaseOracle\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":71,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":30}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"markedQubit\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":31},\"Item2\":{\"Line\":1,\"Column\":42}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"databaseRegister\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":52},\"Item2\":{\"Line\":1,\"Column\":68}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Qubit\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ApplyDatabaseOracle\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":71,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":30}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ApplyDatabaseOracle\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":71,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":90},\"Item2\":{\"Line\":1,\"Column\":99}},\"Documentation\":[\"automatically generated QsAdjoint specialization for Microsoft.Quantum.Samples.DatabaseSearch.ApplyDatabaseOracle\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ApplyDatabaseOracle\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":71,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":90},\"Item2\":{\"Line\":1,\"Column\":99}},\"Documentation\":[\"automatically generated QsControlled specialization for Microsoft.Quantum.Samples.DatabaseSearch.ApplyDatabaseOracle\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ApplyDatabaseOracle\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":71,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":90},\"Item2\":{\"Line\":1,\"Column\":99}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Microsoft.Quantum.Samples.DatabaseSearch.ApplyDatabaseOracle\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ApplyUniformSuperpositionOracle\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":104,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":42}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"databaseRegister\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":43},\"Item2\":{\"Line\":1,\"Column\":59}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ApplyUniformSuperpositionOracle\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":104,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":42}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ApplyUniformSuperpositionOracle\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":104,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":81},\"Item2\":{\"Line\":1,\"Column\":90}},\"Documentation\":[\"automatically generated QsAdjoint specialization for Microsoft.Quantum.Samples.DatabaseSearch.ApplyUniformSuperpositionOracle\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ApplyUniformSuperpositionOracle\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":104,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":81},\"Item2\":{\"Line\":1,\"Column\":90}},\"Documentation\":[\"automatically generated QsControlled specialization for Microsoft.Quantum.Samples.DatabaseSearch.ApplyUniformSuperpositionOracle\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ApplyUniformSuperpositionOracle\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":104,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":81},\"Item2\":{\"Line\":1,\"Column\":90}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Microsoft.Quantum.Samples.DatabaseSearch.ApplyUniformSuperpositionOracle\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ApplyStatePreparationOracle\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":135,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":38}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"markedQubit\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":40},\"Item2\":{\"Line\":1,\"Column\":51}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"databaseRegister\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":61},\"Item2\":{\"Line\":1,\"Column\":77}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Qubit\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ApplyStatePreparationOracle\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":135,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":38}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ApplyStatePreparationOracle\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":135,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":99},\"Item2\":{\"Line\":1,\"Column\":108}},\"Documentation\":[\"automatically generated QsAdjoint specialization for Microsoft.Quantum.Samples.DatabaseSearch.ApplyStatePreparationOracle\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ApplyStatePreparationOracle\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":135,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":99},\"Item2\":{\"Line\":1,\"Column\":108}},\"Documentation\":[\"automatically generated QsControlled specialization for Microsoft.Quantum.Samples.DatabaseSearch.ApplyStatePreparationOracle\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ApplyStatePreparationOracle\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":135,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":99},\"Item2\":{\"Line\":1,\"Column\":108}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Microsoft.Quantum.Samples.DatabaseSearch.ApplyStatePreparationOracle\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ReflectAboutMarkedState\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":156,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":34}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"markedQubit\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":35},\"Item2\":{\"Line\":1,\"Column\":46}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Qubit\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ReflectAboutMarkedState\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":156,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":34}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ReflectAboutZero\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":167,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":27}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"databaseRegister\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":28},\"Item2\":{\"Line\":1,\"Column\":44}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Performs a reflection about the |00…0〉 state.\",\"\",\" # Input\",\" ## databaseRegister\",\" A register of n qubits initially in the |00…0〉 state.\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ReflectAboutZero\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":167,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":27}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ReflectAboutInitialState\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":184,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":35}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"markedQubit\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":36},\"Item2\":{\"Line\":1,\"Column\":47}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"databaseRegister\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":57},\"Item2\":{\"Line\":1,\"Column\":73}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Qubit\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Performs a reflection around the initial state, given by DU|0〉|0〉.\",\"\",\" # Input\",\" ## markedQubit\",\" Qubit that indicated whether database element is marked.\",\" ## databaseRegister\",\" A register of n qubits initially in the |00…0〉 state.\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ReflectAboutInitialState\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":184,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":35}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"SearchForMarkedState\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":219,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":31}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"nIterations\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":32},\"Item2\":{\"Line\":1,\"Column\":43}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"markedQubit\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":51},\"Item2\":{\"Line\":1,\"Column\":62}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"databaseRegister\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":72},\"Item2\":{\"Line\":1,\"Column\":88}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Qubit\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"SearchForMarkedState\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":219,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":31}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ApplyQuantumSearch\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":247,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":29}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"nIterations\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":30},\"Item2\":{\"Line\":1,\"Column\":41}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"nDatabaseQubits\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":49},\"Item2\":{\"Line\":1,\"Column\":64}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Result\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]}]]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ApplyQuantumSearch\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":247,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":29}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ApplyDatabaseOracleFromInts\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":380,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":38}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"markedElements\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":39},\"Item2\":{\"Line\":1,\"Column\":53}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"markedQubit\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":63},\"Item2\":{\"Line\":1,\"Column\":74}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"databaseRegister\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":84},\"Item2\":{\"Line\":1,\"Column\":100}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},{\"Case\":\"Qubit\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ApplyDatabaseOracleFromInts\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":380,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":38}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ApplyDatabaseOracleFromInts\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":380,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":3,\"Column\":8},\"Item2\":{\"Line\":3,\"Column\":17}},\"Documentation\":[\"automatically generated QsAdjoint specialization for Microsoft.Quantum.Samples.DatabaseSearch.ApplyDatabaseOracleFromInts\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ApplyDatabaseOracleFromInts\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":380,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":3,\"Column\":8},\"Item2\":{\"Line\":3,\"Column\":17}},\"Documentation\":[\"automatically generated QsControlled specialization for Microsoft.Quantum.Samples.DatabaseSearch.ApplyDatabaseOracleFromInts\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ApplyDatabaseOracleFromInts\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":380,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":3,\"Column\":8},\"Item2\":{\"Line\":3,\"Column\":17}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Microsoft.Quantum.Samples.DatabaseSearch.ApplyDatabaseOracleFromInts\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"_GroverStatePrepOracle\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":411,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":33}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"markedElements\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":34},\"Item2\":{\"Line\":1,\"Column\":48}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"idxMarkedQubit\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":58},\"Item2\":{\"Line\":1,\"Column\":72}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"startQubits\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":80},\"Item2\":{\"Line\":1,\"Column\":91}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},{\"Case\":\"Int\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Preparation of start state from database oracle and oracle `U` that\",\" creates a uniform superposition over database indices.\",\"\",\" # Input\",\" ## markedElements\",\" Indices to marked elements in database.\",\" ## idxMarkedQubit\",\" Index to `MarkedQubit`.\",\" ## startQubits\",\" The collection of the n+1 qubits `MarkedQubit` and `databaseRegister`\",\" initially in the |00…0〉 state.\",\"\",\" # Remarks\",\" This implements an oracle `DU` that prepares the start state\",\" DU|0〉|0〉 = √(M/N)|1〉|marked〉 + √(1-(M/N)^2)|0〉|unmarked〉 where\",\" `M` is the length of `markedElements`, and\",\" `N` is 2^n, where `n` is the number of database qubits.\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"_GroverStatePrepOracle\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":411,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":33}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"_GroverStatePrepOracle\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":411,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":3,\"Column\":8},\"Item2\":{\"Line\":3,\"Column\":17}},\"Documentation\":[\"automatically generated QsAdjoint specialization for Microsoft.Quantum.Samples.DatabaseSearch._GroverStatePrepOracle\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"_GroverStatePrepOracle\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":411,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":3,\"Column\":8},\"Item2\":{\"Line\":3,\"Column\":17}},\"Documentation\":[\"automatically generated QsControlled specialization for Microsoft.Quantum.Samples.DatabaseSearch._GroverStatePrepOracle\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"_GroverStatePrepOracle\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":411,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":3,\"Column\":8},\"Item2\":{\"Line\":3,\"Column\":17}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Microsoft.Quantum.Samples.DatabaseSearch._GroverStatePrepOracle\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"GroverStatePrepOracle\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":436,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":31}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"markedElements\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":32},\"Item2\":{\"Line\":1,\"Column\":46}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"ReturnType\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Oracles\",\"Name\":\"StateOracle\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":58},\"Item2\":{\"Line\":1,\"Column\":69}}]}}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" `StateOracle` type for the preparation of a start state that has a\",\" marked qubit entangled with some desired state in the database\",\" register.\",\"\",\" # Input\",\" ## markedElements\",\" Indices to marked elements in database.\",\"\",\" # Output\",\" A `StateOracle` type with signature\",\" ((Int, Qubit[]) => () is Adj + Ctl).\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"GroverStatePrepOracle\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":436,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":31}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"GroverSearch\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":461,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":22}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"markedElements\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":23},\"Item2\":{\"Line\":1,\"Column\":37}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"nIterations\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":47},\"Item2\":{\"Line\":1,\"Column\":58}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"idxMarkedQubit\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":66},\"Item2\":{\"Line\":1,\"Column\":80}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Grover's search algorithm using library functions.\",\"\",\" # Input\",\" ## markedElements\",\" Indices to marked elements in database.\",\" ## nIterations\",\" Number of iterations of the Grover iteration to apply.\",\" ## idxMarkedQubit\",\" Index to `MarkedQubit`.\",\"\",\" # Output\",\" Unitary implementing Grover's search algorithm.\",\"\",\" # Remarks\",\" On input |0〉|0〉, this prepares the state |1〉|marked〉 with amplitude\",\" Sin((2*nIterations + 1) ArcSin(Sqrt(M/N))).\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"GroverSearch\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":461,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":22}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ApplyGroverSearch\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":483,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":28}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"markedElements\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":29},\"Item2\":{\"Line\":1,\"Column\":43}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"nIterations\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":53},\"Item2\":{\"Line\":1,\"Column\":64}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"nDatabaseQubits\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":72},\"Item2\":{\"Line\":1,\"Column\":87}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Result\"},{\"Case\":\"Int\"}]]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Performs quantum search for the marked elements and returns an index\",\" to the found element in integer format.\",\"\",\" # Input\",\" ## markedElements\",\" Indices to marked elements in database.\",\" ## nIterations\",\" Number of applications of the Grover iterate (RS · RM).\",\" ## nDatabaseQubits\",\" Number of qubits in the database register.\",\"\",\" # Output\",\" Measurement outcome of marked Qubit and measurement outcomes of\",\" the database register converted to an integer.\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Samples.DatabaseSearch\",\"Name\":\"ApplyGroverSearch\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs\",\"Position\":{\"Item1\":483,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":28}},\"Documentation\":[]}")]
#line hidden
namespace Microsoft.Quantum.Samples.DatabaseSearch
{
    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.Body, 72, 105)]
    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.Adjoint, 72, 105)]
    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.Controlled, 72, 105)]
    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.ControlledAdjoint, 72, 105)]
    public partial class ApplyDatabaseOracle : Unitary<(Qubit,IQArray<Qubit>)>, ICallable
    {
        public ApplyDatabaseOracle(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Qubit,IQArray<Qubit>)>, IApplyData
        {
            public In((Qubit,IQArray<Qubit>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item1)?.Qubits, ((IApplyData)Data.Item2)?.Qubits);
                }
            }
        }

        String ICallable.Name => "ApplyDatabaseOracle";
        String ICallable.FullName => "Microsoft.Quantum.Samples.DatabaseSearch.ApplyDatabaseOracle";
        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        public override Func<(Qubit,IQArray<Qubit>), QVoid> __Body__ => (__in__) =>
        {
            var (markedQubit,databaseRegister) = __in__;
#line 76 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            Microsoft__Quantum__Intrinsic__X.Controlled.Apply((databaseRegister, markedQubit));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(Qubit,IQArray<Qubit>), QVoid> __AdjointBody__ => (__in__) =>
        {
            var (markedQubit,databaseRegister) = __in__;
#line 72 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            Microsoft__Quantum__Intrinsic__X.Controlled.Adjoint.Apply((databaseRegister, markedQubit));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Qubit,IQArray<Qubit>)), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,(markedQubit,databaseRegister)) = __in__;
#line 72 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            Microsoft__Quantum__Intrinsic__X.Controlled.Controlled.Apply((__controlQubits__, (databaseRegister, markedQubit)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Qubit,IQArray<Qubit>)), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,(markedQubit,databaseRegister)) = __in__;
#line 72 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            Microsoft__Quantum__Intrinsic__X.Controlled.Adjoint.Controlled.Apply((__controlQubits__, (databaseRegister, markedQubit)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
        }

        public override IApplyData __DataIn__((Qubit,IQArray<Qubit>) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Qubit markedQubit, IQArray<Qubit> databaseRegister)
        {
            return __m__.Run<ApplyDatabaseOracle, (Qubit,IQArray<Qubit>), QVoid>((markedQubit, databaseRegister));
        }
    }

    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.Body, 105, 136)]
    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.Adjoint, 105, 136)]
    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.Controlled, 105, 136)]
    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.ControlledAdjoint, 105, 136)]
    public partial class ApplyUniformSuperpositionOracle : Unitary<IQArray<Qubit>>, ICallable
    {
        public ApplyUniformSuperpositionOracle(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "ApplyUniformSuperpositionOracle";
        String ICallable.FullName => "Microsoft.Quantum.Samples.DatabaseSearch.ApplyUniformSuperpositionOracle";
        protected IUnitary Microsoft__Quantum__Canon__ApplyToEachCA
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        public override Func<IQArray<Qubit>, QVoid> __Body__ => (__in__) =>
        {
            var databaseRegister = __in__;
#line 106 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            Microsoft__Quantum__Canon__ApplyToEachCA.Apply((Microsoft__Quantum__Intrinsic__H, databaseRegister));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<IQArray<Qubit>, QVoid> __AdjointBody__ => (__in__) =>
        {
            var databaseRegister = __in__;
#line 105 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            Microsoft__Quantum__Canon__ApplyToEachCA.Adjoint.Apply((Microsoft__Quantum__Intrinsic__H, databaseRegister));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,IQArray<Qubit>), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,databaseRegister) = __in__;
#line 105 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            Microsoft__Quantum__Canon__ApplyToEachCA.Controlled.Apply((__controlQubits__, (Microsoft__Quantum__Intrinsic__H, databaseRegister)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,IQArray<Qubit>), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,databaseRegister) = __in__;
#line 105 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            Microsoft__Quantum__Canon__ApplyToEachCA.Adjoint.Controlled.Apply((__controlQubits__, (Microsoft__Quantum__Intrinsic__H, databaseRegister)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Canon__ApplyToEachCA = this.__Factory__.Get<IUnitary>(typeof(global::Microsoft.Quantum.Canon.ApplyToEachCA<>));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
        }

        public override IApplyData __DataIn__(IQArray<Qubit> data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Qubit> databaseRegister)
        {
            return __m__.Run<ApplyUniformSuperpositionOracle, IQArray<Qubit>, QVoid>(databaseRegister);
        }
    }

    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.Body, 136, 157)]
    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.Adjoint, 136, 157)]
    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.Controlled, 136, 157)]
    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.ControlledAdjoint, 136, 157)]
    public partial class ApplyStatePreparationOracle : Unitary<(Qubit,IQArray<Qubit>)>, ICallable
    {
        public ApplyStatePreparationOracle(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Qubit,IQArray<Qubit>)>, IApplyData
        {
            public In((Qubit,IQArray<Qubit>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item1)?.Qubits, ((IApplyData)Data.Item2)?.Qubits);
                }
            }
        }

        String ICallable.Name => "ApplyStatePreparationOracle";
        String ICallable.FullName => "Microsoft.Quantum.Samples.DatabaseSearch.ApplyStatePreparationOracle";
        protected IUnitary<IQArray<Qubit>> ApplyUniformSuperpositionOracle__
        {
            get;
            set;
        }

        protected IUnitary<(Qubit,IQArray<Qubit>)> ApplyDatabaseOracle__
        {
            get;
            set;
        }

        public override Func<(Qubit,IQArray<Qubit>), QVoid> __Body__ => (__in__) =>
        {
            var (markedQubit,databaseRegister) = __in__;
#line 137 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            ApplyUniformSuperpositionOracle__.Apply(databaseRegister);
#line 138 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            ApplyDatabaseOracle__.Apply((markedQubit, databaseRegister));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(Qubit,IQArray<Qubit>), QVoid> __AdjointBody__ => (__in__) =>
        {
            var (markedQubit,databaseRegister) = __in__;
#line 136 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            ApplyDatabaseOracle__.Adjoint.Apply((markedQubit, databaseRegister));
#line 136 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            ApplyUniformSuperpositionOracle__.Adjoint.Apply(databaseRegister);
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Qubit,IQArray<Qubit>)), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,(markedQubit,databaseRegister)) = __in__;
#line 136 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            ApplyUniformSuperpositionOracle__.Controlled.Apply((__controlQubits__, databaseRegister));
#line 136 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            ApplyDatabaseOracle__.Controlled.Apply((__controlQubits__, (markedQubit, databaseRegister)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Qubit,IQArray<Qubit>)), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,(markedQubit,databaseRegister)) = __in__;
#line 136 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            ApplyDatabaseOracle__.Adjoint.Controlled.Apply((__controlQubits__, (markedQubit, databaseRegister)));
#line 136 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            ApplyUniformSuperpositionOracle__.Adjoint.Controlled.Apply((__controlQubits__, databaseRegister));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.ApplyUniformSuperpositionOracle__ = this.__Factory__.Get<IUnitary<IQArray<Qubit>>>(typeof(ApplyUniformSuperpositionOracle));
            this.ApplyDatabaseOracle__ = this.__Factory__.Get<IUnitary<(Qubit,IQArray<Qubit>)>>(typeof(ApplyDatabaseOracle));
        }

        public override IApplyData __DataIn__((Qubit,IQArray<Qubit>) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Qubit markedQubit, IQArray<Qubit> databaseRegister)
        {
            return __m__.Run<ApplyStatePreparationOracle, (Qubit,IQArray<Qubit>), QVoid>((markedQubit, databaseRegister));
        }
    }

    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.Body, 157, 168)]
    public partial class ReflectAboutMarkedState : Operation<Qubit, QVoid>, ICallable
    {
        public ReflectAboutMarkedState(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "ReflectAboutMarkedState";
        String ICallable.FullName => "Microsoft.Quantum.Samples.DatabaseSearch.ReflectAboutMarkedState";
        protected IUnitary<(Double,Qubit)> R1__
        {
            get;
            set;
        }

        protected ICallable<QVoid, Double> Microsoft__Quantum__Math__PI
        {
            get;
            set;
        }

        public override Func<Qubit, QVoid> __Body__ => (__in__) =>
        {
            var markedQubit = __in__;
#line 159 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            R1__.Apply((Microsoft__Quantum__Math__PI.Apply(QVoid.Instance), markedQubit));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.R1__ = this.__Factory__.Get<IUnitary<(Double,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.R1));
            this.Microsoft__Quantum__Math__PI = this.__Factory__.Get<ICallable<QVoid, Double>>(typeof(global::Microsoft.Quantum.Math.PI));
        }

        public override IApplyData __DataIn__(Qubit data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Qubit markedQubit)
        {
            return __m__.Run<ReflectAboutMarkedState, Qubit, QVoid>(markedQubit);
        }
    }

    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.Body, 168, 185)]
    public partial class ReflectAboutZero : Operation<IQArray<Qubit>, QVoid>, ICallable
    {
        public ReflectAboutZero(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "ReflectAboutZero";
        String ICallable.FullName => "Microsoft.Quantum.Samples.DatabaseSearch.ReflectAboutZero";
        protected IUnitary Microsoft__Quantum__Canon__ApplyToEachCA
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__Z
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Arrays__Rest
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Arrays__Head
        {
            get;
            set;
        }

        public override Func<IQArray<Qubit>, QVoid> __Body__ => (__in__) =>
        {
            var databaseRegister = __in__;
#line 170 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            Microsoft__Quantum__Canon__ApplyToEachCA.Apply((Microsoft__Quantum__Intrinsic__X, databaseRegister));
#line 172 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            Microsoft__Quantum__Intrinsic__Z.Controlled.Apply((Microsoft__Quantum__Arrays__Rest.Apply<IQArray<Qubit>>(databaseRegister), Microsoft__Quantum__Arrays__Head.Apply<Qubit>(databaseRegister)));
#line 168 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            Microsoft__Quantum__Canon__ApplyToEachCA.Adjoint.Apply((Microsoft__Quantum__Intrinsic__X, databaseRegister));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Canon__ApplyToEachCA = this.__Factory__.Get<IUnitary>(typeof(global::Microsoft.Quantum.Canon.ApplyToEachCA<>));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.Microsoft__Quantum__Intrinsic__Z = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.Z));
            this.Microsoft__Quantum__Arrays__Rest = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Arrays.Rest<>));
            this.Microsoft__Quantum__Arrays__Head = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Arrays.Head<>));
        }

        public override IApplyData __DataIn__(IQArray<Qubit> data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Qubit> databaseRegister)
        {
            return __m__.Run<ReflectAboutZero, IQArray<Qubit>, QVoid>(databaseRegister);
        }
    }

    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.Body, 185, 220)]
    public partial class ReflectAboutInitialState : Operation<(Qubit,IQArray<Qubit>), QVoid>, ICallable
    {
        public ReflectAboutInitialState(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Qubit,IQArray<Qubit>)>, IApplyData
        {
            public In((Qubit,IQArray<Qubit>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item1)?.Qubits, ((IApplyData)Data.Item2)?.Qubits);
                }
            }
        }

        String ICallable.Name => "ReflectAboutInitialState";
        String ICallable.FullName => "Microsoft.Quantum.Samples.DatabaseSearch.ReflectAboutInitialState";
        protected IUnitary<(Qubit,IQArray<Qubit>)> ApplyStatePreparationOracle__
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ReflectAboutZero__
        {
            get;
            set;
        }

        public override Func<(Qubit,IQArray<Qubit>), QVoid> __Body__ => (__in__) =>
        {
            var (markedQubit,databaseRegister) = __in__;
#line 187 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            ApplyStatePreparationOracle__.Adjoint.Apply((markedQubit, databaseRegister));
#line 189 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            ReflectAboutZero__.Apply(QArray<Qubit>.Add(new QArray<Qubit>(markedQubit), databaseRegister));
#line 185 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            ApplyStatePreparationOracle__.Adjoint.Adjoint.Apply((markedQubit, databaseRegister));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.ApplyStatePreparationOracle__ = this.__Factory__.Get<IUnitary<(Qubit,IQArray<Qubit>)>>(typeof(ApplyStatePreparationOracle));
            this.ReflectAboutZero__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(ReflectAboutZero));
        }

        public override IApplyData __DataIn__((Qubit,IQArray<Qubit>) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Qubit markedQubit, IQArray<Qubit> databaseRegister)
        {
            return __m__.Run<ReflectAboutInitialState, (Qubit,IQArray<Qubit>), QVoid>((markedQubit, databaseRegister));
        }
    }

    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.Body, 220, 248)]
    public partial class SearchForMarkedState : Operation<(Int64,Qubit,IQArray<Qubit>), QVoid>, ICallable
    {
        public SearchForMarkedState(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Int64,Qubit,IQArray<Qubit>)>, IApplyData
        {
            public In((Int64,Qubit,IQArray<Qubit>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item2)?.Qubits, ((IApplyData)Data.Item3)?.Qubits);
                }
            }
        }

        String ICallable.Name => "SearchForMarkedState";
        String ICallable.FullName => "Microsoft.Quantum.Samples.DatabaseSearch.SearchForMarkedState";
        protected IUnitary<(Qubit,IQArray<Qubit>)> ApplyStatePreparationOracle__
        {
            get;
            set;
        }

        protected ICallable<Qubit, QVoid> ReflectAboutMarkedState__
        {
            get;
            set;
        }

        protected ICallable<(Qubit,IQArray<Qubit>), QVoid> ReflectAboutInitialState__
        {
            get;
            set;
        }

        public override Func<(Int64,Qubit,IQArray<Qubit>), QVoid> __Body__ => (__in__) =>
        {
            var (nIterations,markedQubit,databaseRegister) = __in__;
#line 221 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            ApplyStatePreparationOracle__.Apply((markedQubit, databaseRegister));
#line 224 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            foreach (var idx in new QRange(0L, (nIterations - 1L)))
#line hidden
            {
#line 225 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
                ReflectAboutMarkedState__.Apply(markedQubit);
#line 226 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
                ReflectAboutInitialState__.Apply((markedQubit, databaseRegister));
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.ApplyStatePreparationOracle__ = this.__Factory__.Get<IUnitary<(Qubit,IQArray<Qubit>)>>(typeof(ApplyStatePreparationOracle));
            this.ReflectAboutMarkedState__ = this.__Factory__.Get<ICallable<Qubit, QVoid>>(typeof(ReflectAboutMarkedState));
            this.ReflectAboutInitialState__ = this.__Factory__.Get<ICallable<(Qubit,IQArray<Qubit>), QVoid>>(typeof(ReflectAboutInitialState));
        }

        public override IApplyData __DataIn__((Int64,Qubit,IQArray<Qubit>) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Int64 nIterations, Qubit markedQubit, IQArray<Qubit> databaseRegister)
        {
            return __m__.Run<SearchForMarkedState, (Int64,Qubit,IQArray<Qubit>), QVoid>((nIterations, markedQubit, databaseRegister));
        }
    }

    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.Body, 248, 381)]
    public partial class ApplyQuantumSearch : Operation<(Int64,Int64), (Result,IQArray<Result>)>, ICallable
    {
        public ApplyQuantumSearch(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Int64,Int64)>, IApplyData
        {
            public In((Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        public class Out : QTuple<(Result,IQArray<Result>)>, IApplyData
        {
            public Out((Result,IQArray<Result>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "ApplyQuantumSearch";
        String ICallable.FullName => "Microsoft.Quantum.Samples.DatabaseSearch.ApplyQuantumSearch";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected ICallable<(Int64,Qubit,IQArray<Qubit>), QVoid> SearchForMarkedState__
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> Microsoft__Quantum__Measurement__MResetZ
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Arrays__ForEach
        {
            get;
            set;
        }

        public override Func<(Int64,Int64), (Result,IQArray<Result>)> __Body__ => (__in__) =>
        {
            var (nIterations,nDatabaseQubits) = __in__;
#line hidden
            {
#line 251 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
                var markedQubit = Allocate__.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line hidden
                    {
#line 252 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
                        var databaseRegister = Allocate__.Apply(nDatabaseQubits);
#line hidden
                        bool __arg2__ = true;
                        try
                        {
#line 255 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
                            SearchForMarkedState__.Apply((nIterations, markedQubit, databaseRegister));
#line 258 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
                            var resultSuccess = Microsoft__Quantum__Measurement__MResetZ.Apply(markedQubit);
#line 262 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
                            var resultElement = (IQArray<Result>)Microsoft__Quantum__Arrays__ForEach.Apply<IQArray<Result>>((Microsoft__Quantum__Measurement__MResetZ, databaseRegister));
#line 265 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
                            return (resultSuccess, resultElement);
                        }
#line hidden
                        catch
                        {
                            __arg2__ = false;
                            throw;
                        }
#line hidden
                        finally
                        {
                            if (__arg2__)
                            {
#line hidden
                                Release__.Apply(databaseRegister);
                            }
                        }
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(markedQubit);
                    }
                }
            }
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.SearchForMarkedState__ = this.__Factory__.Get<ICallable<(Int64,Qubit,IQArray<Qubit>), QVoid>>(typeof(SearchForMarkedState));
            this.Microsoft__Quantum__Measurement__MResetZ = this.__Factory__.Get<ICallable<Qubit, Result>>(typeof(global::Microsoft.Quantum.Measurement.MResetZ));
            this.Microsoft__Quantum__Arrays__ForEach = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Arrays.ForEach<,>));
        }

        public override IApplyData __DataIn__((Int64,Int64) data) => new In(data);
        public override IApplyData __DataOut__((Result,IQArray<Result>) data) => new Out(data);
        public static System.Threading.Tasks.Task<(Result,IQArray<Result>)> Run(IOperationFactory __m__, Int64 nIterations, Int64 nDatabaseQubits)
        {
            return __m__.Run<ApplyQuantumSearch, (Int64,Int64), (Result,IQArray<Result>)>((nIterations, nDatabaseQubits));
        }
    }

    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.Body, 381, 412)]
    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.Adjoint, 381, 412)]
    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.Controlled, 381, 412)]
    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.ControlledAdjoint, 381, 412)]
    public partial class ApplyDatabaseOracleFromInts : Unitary<(IQArray<Int64>,Qubit,IQArray<Qubit>)>, ICallable
    {
        public ApplyDatabaseOracleFromInts(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Int64>,Qubit,IQArray<Qubit>)>, IApplyData
        {
            public In((IQArray<Int64>,Qubit,IQArray<Qubit>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item2)?.Qubits, ((IApplyData)Data.Item3)?.Qubits);
                }
            }
        }

        String ICallable.Name => "ApplyDatabaseOracleFromInts";
        String ICallable.FullName => "Microsoft.Quantum.Samples.DatabaseSearch.ApplyDatabaseOracleFromInts";
        protected ICallable Microsoft__Quantum__Canon__ControlledOnInt
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected ICallable Length__
        {
            get;
            set;
        }

        public override Func<(IQArray<Int64>,Qubit,IQArray<Qubit>), QVoid> __Body__ => (__in__) =>
        {
            var (markedElements,markedQubit,databaseRegister) = __in__;
#line 384 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            foreach (var markedElement in markedElements)
#line hidden
            {
#line 385 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
                Microsoft__Quantum__Canon__ControlledOnInt.Apply<IUnitary>((markedElement, Microsoft__Quantum__Intrinsic__X)).Apply((databaseRegister, markedQubit));
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Int64>,Qubit,IQArray<Qubit>), QVoid> __AdjointBody__ => (__in__) =>
        {
            var (markedElements,markedQubit,databaseRegister) = __in__;
#line 381 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            foreach (var __qsVar0__markedElement__ in markedElements.Slice(new QRange((markedElements.Length - 1L), -1L, 0L)))
#line hidden
            {
#line 381 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
                Microsoft__Quantum__Canon__ControlledOnInt.Apply<IUnitary>((__qsVar0__markedElement__, Microsoft__Quantum__Intrinsic__X)).Adjoint.Apply((databaseRegister, markedQubit));
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(IQArray<Int64>,Qubit,IQArray<Qubit>)), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,(markedElements,markedQubit,databaseRegister)) = __in__;
#line 381 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            foreach (var markedElement in markedElements)
#line hidden
            {
#line 381 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
                Microsoft__Quantum__Canon__ControlledOnInt.Apply<IUnitary>((markedElement, Microsoft__Quantum__Intrinsic__X)).Controlled.Apply((__controlQubits__, (databaseRegister, markedQubit)));
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(IQArray<Int64>,Qubit,IQArray<Qubit>)), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,(markedElements,markedQubit,databaseRegister)) = __in__;
#line 381 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            foreach (var __qsVar0__markedElement__ in markedElements.Slice(new QRange((markedElements.Length - 1L), -1L, 0L)))
#line hidden
            {
#line 381 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
                Microsoft__Quantum__Canon__ControlledOnInt.Apply<IUnitary>((__qsVar0__markedElement__, Microsoft__Quantum__Intrinsic__X)).Adjoint.Controlled.Apply((__controlQubits__, (databaseRegister, markedQubit)));
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Canon__ControlledOnInt = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Canon.ControlledOnInt<>));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
        }

        public override IApplyData __DataIn__((IQArray<Int64>,Qubit,IQArray<Qubit>) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Int64> markedElements, Qubit markedQubit, IQArray<Qubit> databaseRegister)
        {
            return __m__.Run<ApplyDatabaseOracleFromInts, (IQArray<Int64>,Qubit,IQArray<Qubit>), QVoid>((markedElements, markedQubit, databaseRegister));
        }
    }

    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.Body, 412, 437)]
    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.Adjoint, 412, 437)]
    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.Controlled, 412, 437)]
    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.ControlledAdjoint, 412, 437)]
    public partial class _GroverStatePrepOracle : Unitary<(IQArray<Int64>,Int64,IQArray<Qubit>)>, ICallable
    {
        public _GroverStatePrepOracle(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Int64>,Int64,IQArray<Qubit>)>, IApplyData
        {
            public In((IQArray<Int64>,Int64,IQArray<Qubit>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return ((IApplyData)Data.Item3)?.Qubits;
                }
            }
        }

        String ICallable.Name => "_GroverStatePrepOracle";
        String ICallable.FullName => "Microsoft.Quantum.Samples.DatabaseSearch._GroverStatePrepOracle";
        protected ICallable Microsoft__Quantum__Arrays__Exclude
        {
            get;
            set;
        }

        protected IUnitary Microsoft__Quantum__Canon__ApplyToEachCA
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected IUnitary<(IQArray<Int64>,Qubit,IQArray<Qubit>)> ApplyDatabaseOracleFromInts__
        {
            get;
            set;
        }

        public override Func<(IQArray<Int64>,Int64,IQArray<Qubit>), QVoid> __Body__ => (__in__) =>
        {
            var (markedElements,idxMarkedQubit,startQubits) = __in__;
#line 415 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            var flagQubit = startQubits[idxMarkedQubit];
#line 416 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            var databaseRegister = (IQArray<Qubit>)Microsoft__Quantum__Arrays__Exclude.Apply<IQArray<Qubit>>((new QArray<Int64>(idxMarkedQubit), startQubits));
#line 419 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            Microsoft__Quantum__Canon__ApplyToEachCA.Apply((Microsoft__Quantum__Intrinsic__H, databaseRegister));
#line 422 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            ApplyDatabaseOracleFromInts__.Apply((markedElements, flagQubit, databaseRegister));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Int64>,Int64,IQArray<Qubit>), QVoid> __AdjointBody__ => (__in__) =>
        {
            var (markedElements,idxMarkedQubit,startQubits) = __in__;
#line 412 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            var __qsVar0__flagQubit__ = startQubits[idxMarkedQubit];
#line 412 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            var __qsVar1__databaseRegister__ = (IQArray<Qubit>)Microsoft__Quantum__Arrays__Exclude.Apply<IQArray<Qubit>>((new QArray<Int64>(idxMarkedQubit), startQubits));
#line 412 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            ApplyDatabaseOracleFromInts__.Adjoint.Apply((markedElements, __qsVar0__flagQubit__, __qsVar1__databaseRegister__));
#line 412 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            Microsoft__Quantum__Canon__ApplyToEachCA.Adjoint.Apply((Microsoft__Quantum__Intrinsic__H, __qsVar1__databaseRegister__));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(IQArray<Int64>,Int64,IQArray<Qubit>)), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,(markedElements,idxMarkedQubit,startQubits)) = __in__;
#line 412 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            var flagQubit = startQubits[idxMarkedQubit];
#line 412 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            var databaseRegister = (IQArray<Qubit>)Microsoft__Quantum__Arrays__Exclude.Apply<IQArray<Qubit>>((new QArray<Int64>(idxMarkedQubit), startQubits));
#line 412 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            Microsoft__Quantum__Canon__ApplyToEachCA.Controlled.Apply((__controlQubits__, (Microsoft__Quantum__Intrinsic__H, databaseRegister)));
#line 412 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            ApplyDatabaseOracleFromInts__.Controlled.Apply((__controlQubits__, (markedElements, flagQubit, databaseRegister)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(IQArray<Int64>,Int64,IQArray<Qubit>)), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,(markedElements,idxMarkedQubit,startQubits)) = __in__;
#line 412 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            var __qsVar0__flagQubit__ = startQubits[idxMarkedQubit];
#line 412 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            var __qsVar1__databaseRegister__ = (IQArray<Qubit>)Microsoft__Quantum__Arrays__Exclude.Apply<IQArray<Qubit>>((new QArray<Int64>(idxMarkedQubit), startQubits));
#line 412 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            ApplyDatabaseOracleFromInts__.Adjoint.Controlled.Apply((__controlQubits__, (markedElements, __qsVar0__flagQubit__, __qsVar1__databaseRegister__)));
#line 412 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            Microsoft__Quantum__Canon__ApplyToEachCA.Adjoint.Controlled.Apply((__controlQubits__, (Microsoft__Quantum__Intrinsic__H, __qsVar1__databaseRegister__)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Arrays__Exclude = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Arrays.Exclude<>));
            this.Microsoft__Quantum__Canon__ApplyToEachCA = this.__Factory__.Get<IUnitary>(typeof(global::Microsoft.Quantum.Canon.ApplyToEachCA<>));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.ApplyDatabaseOracleFromInts__ = this.__Factory__.Get<IUnitary<(IQArray<Int64>,Qubit,IQArray<Qubit>)>>(typeof(ApplyDatabaseOracleFromInts));
        }

        public override IApplyData __DataIn__((IQArray<Int64>,Int64,IQArray<Qubit>) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Int64> markedElements, Int64 idxMarkedQubit, IQArray<Qubit> startQubits)
        {
            return __m__.Run<_GroverStatePrepOracle, (IQArray<Int64>,Int64,IQArray<Qubit>), QVoid>((markedElements, idxMarkedQubit, startQubits));
        }
    }

    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.Body, 437, 462)]
    public partial class GroverStatePrepOracle : Function<IQArray<Int64>, Microsoft.Quantum.Oracles.StateOracle>, ICallable
    {
        public GroverStatePrepOracle(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "GroverStatePrepOracle";
        String ICallable.FullName => "Microsoft.Quantum.Samples.DatabaseSearch.GroverStatePrepOracle";
        protected ICallable<IUnitary, Microsoft.Quantum.Oracles.StateOracle> Microsoft__Quantum__Oracles__StateOracle
        {
            get;
            set;
        }

        protected IUnitary<(IQArray<Int64>,Int64,IQArray<Qubit>)> _GroverStatePrepOracle__
        {
            get;
            set;
        }

        public override Func<IQArray<Int64>, Microsoft.Quantum.Oracles.StateOracle> __Body__ => (__in__) =>
        {
            var markedElements = __in__;
#line 438 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            return new Microsoft.Quantum.Oracles.StateOracle(_GroverStatePrepOracle__.Partial(new Func<(Int64,IQArray<Qubit>), (IQArray<Int64>,Int64,IQArray<Qubit>)>((__arg1__) => (markedElements, __arg1__.Item1, __arg1__.Item2))));
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Oracles__StateOracle = this.__Factory__.Get<ICallable<IUnitary, Microsoft.Quantum.Oracles.StateOracle>>(typeof(global::Microsoft.Quantum.Oracles.StateOracle));
            this._GroverStatePrepOracle__ = this.__Factory__.Get<IUnitary<(IQArray<Int64>,Int64,IQArray<Qubit>)>>(typeof(_GroverStatePrepOracle));
        }

        public override IApplyData __DataIn__(IQArray<Int64> data) => data;
        public override IApplyData __DataOut__(Microsoft.Quantum.Oracles.StateOracle data) => data;
        public static System.Threading.Tasks.Task<Microsoft.Quantum.Oracles.StateOracle> Run(IOperationFactory __m__, IQArray<Int64> markedElements)
        {
            return __m__.Run<GroverStatePrepOracle, IQArray<Int64>, Microsoft.Quantum.Oracles.StateOracle>(markedElements);
        }
    }

    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.Body, 462, 484)]
    public partial class GroverSearch : Function<(IQArray<Int64>,Int64,Int64), IUnitary>, ICallable
    {
        public GroverSearch(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Int64>,Int64,Int64)>, IApplyData
        {
            public In((IQArray<Int64>,Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "GroverSearch";
        String ICallable.FullName => "Microsoft.Quantum.Samples.DatabaseSearch.GroverSearch";
        protected ICallable<(Int64,Microsoft.Quantum.Oracles.StateOracle,Int64), IUnitary> Microsoft__Quantum__AmplitudeAmplification__StandardAmplitudeAmplification
        {
            get;
            set;
        }

        protected ICallable<IQArray<Int64>, Microsoft.Quantum.Oracles.StateOracle> GroverStatePrepOracle__
        {
            get;
            set;
        }

        public override Func<(IQArray<Int64>,Int64,Int64), IUnitary> __Body__ => (__in__) =>
        {
            var (markedElements,nIterations,idxMarkedQubit) = __in__;
#line 464 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
            return Microsoft__Quantum__AmplitudeAmplification__StandardAmplitudeAmplification.Apply((nIterations, GroverStatePrepOracle__.Apply(markedElements), idxMarkedQubit));
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__AmplitudeAmplification__StandardAmplitudeAmplification = this.__Factory__.Get<ICallable<(Int64,Microsoft.Quantum.Oracles.StateOracle,Int64), IUnitary>>(typeof(global::Microsoft.Quantum.AmplitudeAmplification.StandardAmplitudeAmplification));
            this.GroverStatePrepOracle__ = this.__Factory__.Get<ICallable<IQArray<Int64>, Microsoft.Quantum.Oracles.StateOracle>>(typeof(GroverStatePrepOracle));
        }

        public override IApplyData __DataIn__((IQArray<Int64>,Int64,Int64) data) => new In(data);
        public override IApplyData __DataOut__(IUnitary data) => new QTuple<IUnitary>(data);
        public static System.Threading.Tasks.Task<IUnitary> Run(IOperationFactory __m__, IQArray<Int64> markedElements, Int64 nIterations, Int64 idxMarkedQubit)
        {
            return __m__.Run<GroverSearch, (IQArray<Int64>,Int64,Int64), IUnitary>((markedElements, nIterations, idxMarkedQubit));
        }
    }

    [SourceLocation("/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs", OperationFunctor.Body, 484, -1)]
    public partial class ApplyGroverSearch : Operation<(IQArray<Int64>,Int64,Int64), (Result,Int64)>, ICallable
    {
        public ApplyGroverSearch(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Int64>,Int64,Int64)>, IApplyData
        {
            public In((IQArray<Int64>,Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        public class Out : QTuple<(Result,Int64)>, IApplyData
        {
            public Out((Result,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "ApplyGroverSearch";
        String ICallable.FullName => "Microsoft.Quantum.Samples.DatabaseSearch.ApplyGroverSearch";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Int64>,Int64,Int64), IUnitary> GroverSearch__
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> Microsoft__Quantum__Measurement__MResetZ
        {
            get;
            set;
        }

        protected ICallable<IQArray<Result>, Int64> Microsoft__Quantum__Convert__ResultArrayAsInt
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Arrays__ForEach
        {
            get;
            set;
        }

        public override Func<(IQArray<Int64>,Int64,Int64), (Result,Int64)> __Body__ => (__in__) =>
        {
            var (markedElements,nIterations,nDatabaseQubits) = __in__;
#line hidden
            {
#line 487 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
                var (markedQubit,databaseRegister) = (Allocate__.Apply(), Allocate__.Apply(nDatabaseQubits));
#line hidden
                bool __arg1__ = true;
                try
                {
#line 489 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
                    GroverSearch__.Apply((markedElements, nIterations, 0L)).Apply(QArray<Qubit>.Add(new QArray<Qubit>(markedQubit), databaseRegister));
#line 492 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
                    var resultSuccess = Microsoft__Quantum__Measurement__MResetZ.Apply(markedQubit);
#line 497 "/Users/sdbar/Desktop/q-sharp-grover/DatabaseSearch.qs"
                    return (resultSuccess, Microsoft__Quantum__Convert__ResultArrayAsInt.Apply(Microsoft__Quantum__Arrays__ForEach.Apply<IQArray<Result>>((Microsoft__Quantum__Measurement__MResetZ, databaseRegister))));
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(markedQubit);
#line hidden
                        Release__.Apply(databaseRegister);
                    }
                }
            }
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.GroverSearch__ = this.__Factory__.Get<ICallable<(IQArray<Int64>,Int64,Int64), IUnitary>>(typeof(GroverSearch));
            this.Microsoft__Quantum__Measurement__MResetZ = this.__Factory__.Get<ICallable<Qubit, Result>>(typeof(global::Microsoft.Quantum.Measurement.MResetZ));
            this.Microsoft__Quantum__Convert__ResultArrayAsInt = this.__Factory__.Get<ICallable<IQArray<Result>, Int64>>(typeof(global::Microsoft.Quantum.Convert.ResultArrayAsInt));
            this.Microsoft__Quantum__Arrays__ForEach = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Arrays.ForEach<,>));
        }

        public override IApplyData __DataIn__((IQArray<Int64>,Int64,Int64) data) => new In(data);
        public override IApplyData __DataOut__((Result,Int64) data) => new Out(data);
        public static System.Threading.Tasks.Task<(Result,Int64)> Run(IOperationFactory __m__, IQArray<Int64> markedElements, Int64 nIterations, Int64 nDatabaseQubits)
        {
            return __m__.Run<ApplyGroverSearch, (IQArray<Int64>,Int64,Int64), (Result,Int64)>((markedElements, nIterations, nDatabaseQubits));
        }
    }
}