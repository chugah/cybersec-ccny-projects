//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Intrinsic.Interfaces;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"q_sharp_test\",\"Name\":\"Run_BB84Protocol\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"EntryPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":12},\"Item2\":{\"Line\":1,\"Column\":14}}]}},\"Offset\":{\"Item1\":9,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-test/Program.qs\",\"Position\":{\"Item1\":14,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":27}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"q_sharp_test\",\"Name\":\"Run_BB84Protocol\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-test/Program.qs\",\"Position\":{\"Item1\":14,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":27}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"q_sharp_test\",\"Name\":\"RandomArray\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-test/Program.qs\",\"Position\":{\"Item1\":51,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":22}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"N\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":24},\"Item2\":{\"Line\":1,\"Column\":25}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Int\"},\"ReturnType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"q_sharp_test\",\"Name\":\"RandomArray\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-test/Program.qs\",\"Position\":{\"Item1\":51,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":22}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"q_sharp_test\",\"Name\":\"PrepareAlicesQubits\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-test/Program.qs\",\"Position\":{\"Item1\":65,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":30}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"qs\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":32},\"Item2\":{\"Line\":1,\"Column\":34}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"bases\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":46},\"Item2\":{\"Line\":1,\"Column\":51}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"bits\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":62},\"Item2\":{\"Line\":1,\"Column\":66}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"q_sharp_test\",\"Name\":\"PrepareAlicesQubits\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-test/Program.qs\",\"Position\":{\"Item1\":65,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":30}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"q_sharp_test\",\"Name\":\"MeasureBobsQubits\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-test/Program.qs\",\"Position\":{\"Item1\":77,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":28}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"qs\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":30},\"Item2\":{\"Line\":1,\"Column\":32}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"bases\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":44},\"Item2\":{\"Line\":1,\"Column\":49}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]}]]},\"ReturnType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"q_sharp_test\",\"Name\":\"MeasureBobsQubits\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-test/Program.qs\",\"Position\":{\"Item1\":77,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":28}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"q_sharp_test\",\"Name\":\"GenerateSharedKey\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-test/Program.qs\",\"Position\":{\"Item1\":90,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":27}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"basesAlice\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":29},\"Item2\":{\"Line\":1,\"Column\":39}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"basesBob\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":50},\"Item2\":{\"Line\":1,\"Column\":58}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"measurementsBob\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":69},\"Item2\":{\"Line\":1,\"Column\":84}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]}]]},\"ReturnType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"q_sharp_test\",\"Name\":\"GenerateSharedKey\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-test/Program.qs\",\"Position\":{\"Item1\":90,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":27}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"q_sharp_test\",\"Name\":\"CheckKeysMatch\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-test/Program.qs\",\"Position\":{\"Item1\":107,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":24}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"keyAlice\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":26},\"Item2\":{\"Line\":1,\"Column\":34}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"keyBob\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":45},\"Item2\":{\"Line\":1,\"Column\":51}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"errorRate\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":62},\"Item2\":{\"Line\":1,\"Column\":71}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"Bool\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"q_sharp_test\",\"Name\":\"CheckKeysMatch\"},\"Attributes\":[],\"SourceFile\":\"/Users/sdbar/Desktop/q-sharp-test/Program.qs\",\"Position\":{\"Item1\":107,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":24}},\"Documentation\":[]}")]
#line hidden
namespace q_sharp_test
{
    [SourceLocation("/Users/sdbar/Desktop/q-sharp-test/Program.qs", OperationFunctor.Body, 15, 52)]
    public partial class Run_BB84Protocol : Operation<QVoid, QVoid>, ICallable
    {
        public Run_BB84Protocol(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "Run_BB84Protocol";
        String ICallable.FullName => "q_sharp_test.Run_BB84Protocol";
        public static EntryPointInfo<QVoid, QVoid> Info => new EntryPointInfo<QVoid, QVoid>(typeof(Run_BB84Protocol));
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected ICallable<Int64, IQArray<Boolean>> RandomArray__
        {
            get;
            set;
        }

        protected ICallable Length__
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Qubit>,IQArray<Boolean>,IQArray<Boolean>), QVoid> PrepareAlicesQubits__
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Qubit>,IQArray<Boolean>), IQArray<Boolean>> MeasureBobsQubits__
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Boolean>,IQArray<Boolean>,IQArray<Boolean>), IQArray<Boolean>> GenerateSharedKey__
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Boolean>,IQArray<Boolean>,Int64), Boolean> CheckKeysMatch__
        {
            get;
            set;
        }

        protected ICallable<String, QVoid> Message__
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> __Body__ => (__in__) =>
        {
#line 18 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
            var threshold = 1L;
#line hidden
            {
#line 21 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
                var qs = Allocate__.Apply(20L);
#line hidden
                bool __arg1__ = true;
                try
                {
#line 23 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
                    var basesAlice = (IQArray<Boolean>)RandomArray__.Apply(qs.Length);
#line 24 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
                    var bitsAlice = (IQArray<Boolean>)RandomArray__.Apply(qs.Length);
#line 28 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
                    PrepareAlicesQubits__.Apply((qs, basesAlice, bitsAlice));
#line 32 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
                    var basesBob = (IQArray<Boolean>)RandomArray__.Apply(qs.Length);
#line 36 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
                    var bitsBob = (IQArray<Boolean>)MeasureBobsQubits__.Apply((qs, basesBob));
#line 40 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
                    var keyAlice = (IQArray<Boolean>)GenerateSharedKey__.Apply((basesAlice, basesBob, bitsAlice));
#line 41 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
                    var keyBob = (IQArray<Boolean>)GenerateSharedKey__.Apply((basesAlice, basesBob, bitsBob));
#line 45 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
                    if (CheckKeysMatch__.Apply((keyAlice, keyBob, threshold)))
                    {
#line 46 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
                        Message__.Apply(String.Format("Successfully generated keys for Alice: {0}", keyAlice));
#line 47 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
                        Message__.Apply(String.Format("Successfully generated keys for Bob: {0}", keyAlice));
#line 48 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
                        Message__.Apply(String.Format("Successfully generated keys {0}/{1}", keyAlice, keyBob));
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(qs);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.RandomArray__ = this.__Factory__.Get<ICallable<Int64, IQArray<Boolean>>>(typeof(RandomArray));
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.PrepareAlicesQubits__ = this.__Factory__.Get<ICallable<(IQArray<Qubit>,IQArray<Boolean>,IQArray<Boolean>), QVoid>>(typeof(PrepareAlicesQubits));
            this.MeasureBobsQubits__ = this.__Factory__.Get<ICallable<(IQArray<Qubit>,IQArray<Boolean>), IQArray<Boolean>>>(typeof(MeasureBobsQubits));
            this.GenerateSharedKey__ = this.__Factory__.Get<ICallable<(IQArray<Boolean>,IQArray<Boolean>,IQArray<Boolean>), IQArray<Boolean>>>(typeof(GenerateSharedKey));
            this.CheckKeysMatch__ = this.__Factory__.Get<ICallable<(IQArray<Boolean>,IQArray<Boolean>,Int64), Boolean>>(typeof(CheckKeysMatch));
            this.Message__ = this.__Factory__.Get<ICallable<String, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Message));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<Run_BB84Protocol, QVoid, QVoid>(QVoid.Instance);
        }
    }

    [SourceLocation("/Users/sdbar/Desktop/q-sharp-test/Program.qs", OperationFunctor.Body, 52, 66)]
    public partial class RandomArray : Operation<Int64, IQArray<Boolean>>, ICallable
    {
        public RandomArray(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "RandomArray";
        String ICallable.FullName => "q_sharp_test.RandomArray";
        protected ICallable<Double, Boolean> Microsoft__Quantum__Random__DrawRandomBool
        {
            get;
            set;
        }

        public override Func<Int64, IQArray<Boolean>> __Body__ => (__in__) =>
        {
            var N = __in__;
#line 55 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
#line hidden
            var __arg1__ = false;
#line 55 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
            var array = new QArray<Boolean>(QArray.Filled(() => __arg1__, N));
#line 58 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
            foreach (var i in new QRange(0L, (N - 1L)))
#line hidden
            {
#line 59 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
                array.Modify(i, Microsoft__Quantum__Random__DrawRandomBool.Apply(0.5D));
            }

#line 63 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
            return array;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Random__DrawRandomBool = this.__Factory__.Get<ICallable<Double, Boolean>>(typeof(global::Microsoft.Quantum.Random.DrawRandomBool));
        }

        public override IApplyData __DataIn__(Int64 data) => new QTuple<Int64>(data);
        public override IApplyData __DataOut__(IQArray<Boolean> data) => data;
        public static System.Threading.Tasks.Task<IQArray<Boolean>> Run(IOperationFactory __m__, Int64 N)
        {
            return __m__.Run<RandomArray, Int64, IQArray<Boolean>>(N);
        }
    }

    [SourceLocation("/Users/sdbar/Desktop/q-sharp-test/Program.qs", OperationFunctor.Body, 66, 78)]
    public partial class PrepareAlicesQubits : Operation<(IQArray<Qubit>,IQArray<Boolean>,IQArray<Boolean>), QVoid>, ICallable
    {
        public PrepareAlicesQubits(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Qubit>,IQArray<Boolean>,IQArray<Boolean>)>, IApplyData
        {
            public In((IQArray<Qubit>,IQArray<Boolean>,IQArray<Boolean>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return ((IApplyData)Data.Item1)?.Qubits;
                }
            }
        }

        String ICallable.Name => "PrepareAlicesQubits";
        String ICallable.FullName => "q_sharp_test.PrepareAlicesQubits";
        protected ICallable Length__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        public override Func<(IQArray<Qubit>,IQArray<Boolean>,IQArray<Boolean>), QVoid> __Body__ => (__in__) =>
        {
            var (qs,bases,bits) = __in__;
#line 68 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
            foreach (var i in new QRange(0L, (qs.Length - 1L)))
#line hidden
            {
#line 69 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
                if (bits[i])
                {
#line 70 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
                    Microsoft__Quantum__Intrinsic__X.Apply(qs[i]);
                }

#line 72 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
                if (bases[i])
                {
#line 73 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
                    Microsoft__Quantum__Intrinsic__H.Apply(qs[i]);
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
        }

        public override IApplyData __DataIn__((IQArray<Qubit>,IQArray<Boolean>,IQArray<Boolean>) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Qubit> qs, IQArray<Boolean> bases, IQArray<Boolean> bits)
        {
            return __m__.Run<PrepareAlicesQubits, (IQArray<Qubit>,IQArray<Boolean>,IQArray<Boolean>), QVoid>((qs, bases, bits));
        }
    }

    [SourceLocation("/Users/sdbar/Desktop/q-sharp-test/Program.qs", OperationFunctor.Body, 78, 91)]
    public partial class MeasureBobsQubits : Operation<(IQArray<Qubit>,IQArray<Boolean>), IQArray<Boolean>>, ICallable
    {
        public MeasureBobsQubits(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Qubit>,IQArray<Boolean>)>, IApplyData
        {
            public In((IQArray<Qubit>,IQArray<Boolean>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return ((IApplyData)Data.Item1)?.Qubits;
                }
            }
        }

        String ICallable.Name => "MeasureBobsQubits";
        String ICallable.FullName => "q_sharp_test.MeasureBobsQubits";
        protected ICallable Length__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected ICallable<IQArray<Result>, IQArray<Boolean>> Microsoft__Quantum__Convert__ResultArrayAsBoolArray
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, IQArray<Result>> Microsoft__Quantum__Measurement__MultiM
        {
            get;
            set;
        }

        public override Func<(IQArray<Qubit>,IQArray<Boolean>), IQArray<Boolean>> __Body__ => (__in__) =>
        {
            var (qs,bases) = __in__;
#line 81 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
            foreach (var i in new QRange(0L, (qs.Length - 1L)))
#line hidden
            {
#line 82 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
                if (bases[i])
                {
#line 83 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
                    Microsoft__Quantum__Intrinsic__H.Apply(qs[i]);
                }
            }

#line 88 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
            return Microsoft__Quantum__Convert__ResultArrayAsBoolArray.Apply(Microsoft__Quantum__Measurement__MultiM.Apply(qs));
        }

        ;
        public override void __Init__()
        {
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.Microsoft__Quantum__Convert__ResultArrayAsBoolArray = this.__Factory__.Get<ICallable<IQArray<Result>, IQArray<Boolean>>>(typeof(global::Microsoft.Quantum.Convert.ResultArrayAsBoolArray));
            this.Microsoft__Quantum__Measurement__MultiM = this.__Factory__.Get<ICallable<IQArray<Qubit>, IQArray<Result>>>(typeof(global::Microsoft.Quantum.Measurement.MultiM));
        }

        public override IApplyData __DataIn__((IQArray<Qubit>,IQArray<Boolean>) data) => new In(data);
        public override IApplyData __DataOut__(IQArray<Boolean> data) => data;
        public static System.Threading.Tasks.Task<IQArray<Boolean>> Run(IOperationFactory __m__, IQArray<Qubit> qs, IQArray<Boolean> bases)
        {
            return __m__.Run<MeasureBobsQubits, (IQArray<Qubit>,IQArray<Boolean>), IQArray<Boolean>>((qs, bases));
        }
    }

    [SourceLocation("/Users/sdbar/Desktop/q-sharp-test/Program.qs", OperationFunctor.Body, 91, 108)]
    public partial class GenerateSharedKey : Function<(IQArray<Boolean>,IQArray<Boolean>,IQArray<Boolean>), IQArray<Boolean>>, ICallable
    {
        public GenerateSharedKey(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Boolean>,IQArray<Boolean>,IQArray<Boolean>)>, IApplyData
        {
            public In((IQArray<Boolean>,IQArray<Boolean>,IQArray<Boolean>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "GenerateSharedKey";
        String ICallable.FullName => "q_sharp_test.GenerateSharedKey";
        protected ICallable Microsoft__Quantum__Arrays__Zipped3
        {
            get;
            set;
        }

        public override Func<(IQArray<Boolean>,IQArray<Boolean>,IQArray<Boolean>), IQArray<Boolean>> __Body__ => (__in__) =>
        {
            var (basesAlice,basesBob,measurementsBob) = __in__;
#line 94 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
            var key = new QArray<Boolean>();
#line 98 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
            foreach (var (a,b,bit) in Microsoft__Quantum__Arrays__Zipped3.Apply<IQArray<(Boolean,Boolean,Boolean)>>((basesAlice, basesBob, measurementsBob)))
#line hidden
            {
#line 99 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
                if ((a == b))
                {
#line 100 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
                    key = QArray<Boolean>.Add(key, new QArray<Boolean>(bit));
                }
            }

#line 105 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
            return key;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Arrays__Zipped3 = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Arrays.Zipped3<,,>));
        }

        public override IApplyData __DataIn__((IQArray<Boolean>,IQArray<Boolean>,IQArray<Boolean>) data) => new In(data);
        public override IApplyData __DataOut__(IQArray<Boolean> data) => data;
        public static System.Threading.Tasks.Task<IQArray<Boolean>> Run(IOperationFactory __m__, IQArray<Boolean> basesAlice, IQArray<Boolean> basesBob, IQArray<Boolean> measurementsBob)
        {
            return __m__.Run<GenerateSharedKey, (IQArray<Boolean>,IQArray<Boolean>,IQArray<Boolean>), IQArray<Boolean>>((basesAlice, basesBob, measurementsBob));
        }
    }

    [SourceLocation("/Users/sdbar/Desktop/q-sharp-test/Program.qs", OperationFunctor.Body, 108, -1)]
    public partial class CheckKeysMatch : Function<(IQArray<Boolean>,IQArray<Boolean>,Int64), Boolean>, ICallable
    {
        public CheckKeysMatch(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Boolean>,IQArray<Boolean>,Int64)>, IApplyData
        {
            public In((IQArray<Boolean>,IQArray<Boolean>,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "CheckKeysMatch";
        String ICallable.FullName => "q_sharp_test.CheckKeysMatch";
        protected ICallable Length__
        {
            get;
            set;
        }

        protected ICallable<Int64, Double> Microsoft__Quantum__Convert__IntAsDouble
        {
            get;
            set;
        }

        public override Func<(IQArray<Boolean>,IQArray<Boolean>,Int64), Boolean> __Body__ => (__in__) =>
        {
            var (keyAlice,keyBob,errorRate) = __in__;
#line 110 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
            var N = keyAlice.Length;
#line 113 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
            var mismatchCount = 0L;
#line 115 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
            foreach (var i in new QRange(0L, (N - 1L)))
#line hidden
            {
#line 116 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
                if ((keyAlice[i] != keyBob[i]))
                {
#line 117 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
                    mismatchCount = (mismatchCount + 1L);
                }
            }

#line 123 "/Users/sdbar/Desktop/q-sharp-test/Program.qs"
            return ((Microsoft__Quantum__Convert__IntAsDouble.Apply(mismatchCount) / Microsoft__Quantum__Convert__IntAsDouble.Apply(N)) <= (Microsoft__Quantum__Convert__IntAsDouble.Apply(errorRate) / 100D));
        }

        ;
        public override void __Init__()
        {
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.Microsoft__Quantum__Convert__IntAsDouble = this.__Factory__.Get<ICallable<Int64, Double>>(typeof(global::Microsoft.Quantum.Convert.IntAsDouble));
        }

        public override IApplyData __DataIn__((IQArray<Boolean>,IQArray<Boolean>,Int64) data) => new In(data);
        public override IApplyData __DataOut__(Boolean data) => new QTuple<Boolean>(data);
        public static System.Threading.Tasks.Task<Boolean> Run(IOperationFactory __m__, IQArray<Boolean> keyAlice, IQArray<Boolean> keyBob, Int64 errorRate)
        {
            return __m__.Run<CheckKeysMatch, (IQArray<Boolean>,IQArray<Boolean>,Int64), Boolean>((keyAlice, keyBob, errorRate));
        }
    }
}